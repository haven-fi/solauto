//! This code was AUTOGENERATED using the kinobi library.
//! Please DO NOT EDIT THIS FILE, instead use visitors
//! to add features, then rerun kinobi to update it.
//!
//! [https://github.com/metaplex-foundation/kinobi]
//!

use num_derive::FromPrimitive;
use thiserror::Error;

#[derive(Clone, Debug, Eq, Error, FromPrimitive, PartialEq)]
pub enum SolautoError {
    /// 0 (0x0) - Missing or incorrect accounts provided for the given instructions
    #[error("Missing or incorrect accounts provided for the given instructions")]
    IncorrectAccounts,
    /// 1 (0x1) - Failed to deserialize account data
    #[error("Failed to deserialize account data")]
    FailedAccountDeserialization,
    /// 2 (0x2) - Invalid position settings provided
    #[error("Invalid position settings provided")]
    InvalidPositionSettings,
    /// 3 (0x3) - Invalid DCA configuration provided
    #[error("Invalid DCA configuration provided")]
    InvalidDCASettings,
    /// 4 (0x4) - Invalid automation settings provided
    #[error("Invalid automation settings provided")]
    InvalidAutomationData,
    /// 5 (0x5) - Invalid position condition to rebalance
    #[error("Invalid position condition to rebalance")]
    InvalidRebalanceCondition,
    /// 6 (0x6) - Unable to invoke instruction through a CPI
    #[error("Unable to invoke instruction through a CPI")]
    InstructionIsCPI,
    /// 7 (0x7) - Incorrect set of instructions in the transaction
    #[error("Incorrect set of instructions in the transaction")]
    IncorrectInstructions,
    /// 8 (0x8) - Incorrect swap amount provided. Likely due to high price volatility
    #[error("Incorrect swap amount provided. Likely due to high price volatility")]
    IncorrectDebtAdjustment,
    /// 9 (0x9) - Invalid rebalance was made. Target supply USD and target debt USD was not met
    #[error("Invalid rebalance was made. Target supply USD and target debt USD was not met")]
    InvalidRebalanceMade,
}

impl solana_program::program_error::PrintProgramError for SolautoError {
    fn print<E>(&self) {
        solana_program::msg!(&self.to_string());
    }
}
