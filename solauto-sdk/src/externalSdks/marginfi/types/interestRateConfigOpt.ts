/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Option, OptionOrNullable } from '@metaplex-foundation/umi';
import {
  Serializer,
  option,
  struct,
} from '@metaplex-foundation/umi/serializers';
import {
  WrappedI80F48,
  WrappedI80F48Args,
  getWrappedI80F48Serializer,
} from '.';

export type InterestRateConfigOpt = {
  optimalUtilizationRate: Option<WrappedI80F48>;
  plateauInterestRate: Option<WrappedI80F48>;
  maxInterestRate: Option<WrappedI80F48>;
  insuranceFeeFixedApr: Option<WrappedI80F48>;
  insuranceIrFee: Option<WrappedI80F48>;
  protocolFixedFeeApr: Option<WrappedI80F48>;
  protocolIrFee: Option<WrappedI80F48>;
};

export type InterestRateConfigOptArgs = {
  optimalUtilizationRate: OptionOrNullable<WrappedI80F48Args>;
  plateauInterestRate: OptionOrNullable<WrappedI80F48Args>;
  maxInterestRate: OptionOrNullable<WrappedI80F48Args>;
  insuranceFeeFixedApr: OptionOrNullable<WrappedI80F48Args>;
  insuranceIrFee: OptionOrNullable<WrappedI80F48Args>;
  protocolFixedFeeApr: OptionOrNullable<WrappedI80F48Args>;
  protocolIrFee: OptionOrNullable<WrappedI80F48Args>;
};

export function getInterestRateConfigOptSerializer(): Serializer<
  InterestRateConfigOptArgs,
  InterestRateConfigOpt
> {
  return struct<InterestRateConfigOpt>(
    [
      ['optimalUtilizationRate', option(getWrappedI80F48Serializer())],
      ['plateauInterestRate', option(getWrappedI80F48Serializer())],
      ['maxInterestRate', option(getWrappedI80F48Serializer())],
      ['insuranceFeeFixedApr', option(getWrappedI80F48Serializer())],
      ['insuranceIrFee', option(getWrappedI80F48Serializer())],
      ['protocolFixedFeeApr', option(getWrappedI80F48Serializer())],
      ['protocolIrFee', option(getWrappedI80F48Serializer())],
    ],
    { description: 'InterestRateConfigOpt' }
  ) as Serializer<InterestRateConfigOptArgs, InterestRateConfigOpt>;
}
