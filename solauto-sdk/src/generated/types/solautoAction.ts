/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  GetDataEnumKind,
  GetDataEnumKindContent,
  Serializer,
  dataEnum,
  struct,
  tuple,
  u64,
} from '@metaplex-foundation/umi/serializers';
import {
  TokenBalanceAmount,
  TokenBalanceAmountArgs,
  getTokenBalanceAmountSerializer,
} from '.';

export type SolautoAction =
  | { __kind: 'Deposit'; fields: [bigint] }
  | { __kind: 'Borrow'; fields: [bigint] }
  | { __kind: 'Repay'; fields: [TokenBalanceAmount] }
  | { __kind: 'Withdraw'; fields: [TokenBalanceAmount] };

export type SolautoActionArgs =
  | { __kind: 'Deposit'; fields: [number | bigint] }
  | { __kind: 'Borrow'; fields: [number | bigint] }
  | { __kind: 'Repay'; fields: [TokenBalanceAmountArgs] }
  | { __kind: 'Withdraw'; fields: [TokenBalanceAmountArgs] };

export function getSolautoActionSerializer(): Serializer<
  SolautoActionArgs,
  SolautoAction
> {
  return dataEnum<SolautoAction>(
    [
      [
        'Deposit',
        struct<GetDataEnumKindContent<SolautoAction, 'Deposit'>>([
          ['fields', tuple([u64()])],
        ]),
      ],
      [
        'Borrow',
        struct<GetDataEnumKindContent<SolautoAction, 'Borrow'>>([
          ['fields', tuple([u64()])],
        ]),
      ],
      [
        'Repay',
        struct<GetDataEnumKindContent<SolautoAction, 'Repay'>>([
          ['fields', tuple([getTokenBalanceAmountSerializer()])],
        ]),
      ],
      [
        'Withdraw',
        struct<GetDataEnumKindContent<SolautoAction, 'Withdraw'>>([
          ['fields', tuple([getTokenBalanceAmountSerializer()])],
        ]),
      ],
    ],
    { description: 'SolautoAction' }
  ) as Serializer<SolautoActionArgs, SolautoAction>;
}

// Data Enum Helpers.
export function solautoAction(
  kind: 'Deposit',
  data: GetDataEnumKindContent<SolautoActionArgs, 'Deposit'>['fields']
): GetDataEnumKind<SolautoActionArgs, 'Deposit'>;
export function solautoAction(
  kind: 'Borrow',
  data: GetDataEnumKindContent<SolautoActionArgs, 'Borrow'>['fields']
): GetDataEnumKind<SolautoActionArgs, 'Borrow'>;
export function solautoAction(
  kind: 'Repay',
  data: GetDataEnumKindContent<SolautoActionArgs, 'Repay'>['fields']
): GetDataEnumKind<SolautoActionArgs, 'Repay'>;
export function solautoAction(
  kind: 'Withdraw',
  data: GetDataEnumKindContent<SolautoActionArgs, 'Withdraw'>['fields']
): GetDataEnumKind<SolautoActionArgs, 'Withdraw'>;
export function solautoAction<K extends SolautoActionArgs['__kind']>(
  kind: K,
  data?: any
): Extract<SolautoActionArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data } as Extract<SolautoActionArgs, { __kind: K }>
    : { __kind: kind, ...(data ?? {}) };
}
export function isSolautoAction<K extends SolautoAction['__kind']>(
  kind: K,
  value: SolautoAction
): value is SolautoAction & { __kind: K } {
  return value.__kind === kind;
}
