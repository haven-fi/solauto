/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Serializer,
  array,
  struct,
  u128,
  u32,
} from '@metaplex-foundation/umi/serializers';
import {
  WrappedI80F48,
  WrappedI80F48Args,
  getWrappedI80F48Serializer,
} from '.';

export type InterestRateConfig = {
  optimalUtilizationRate: WrappedI80F48;
  plateauInterestRate: WrappedI80F48;
  maxInterestRate: WrappedI80F48;
  insuranceFeeFixedApr: WrappedI80F48;
  insuranceIrFee: WrappedI80F48;
  protocolFixedFeeApr: WrappedI80F48;
  protocolIrFee: WrappedI80F48;
  protocolOriginationFee: WrappedI80F48;
  padding: Array<number>;
};

export type InterestRateConfigArgs = {
  optimalUtilizationRate: WrappedI80F48Args;
  plateauInterestRate: WrappedI80F48Args;
  maxInterestRate: WrappedI80F48Args;
  insuranceFeeFixedApr: WrappedI80F48Args;
  insuranceIrFee: WrappedI80F48Args;
  protocolFixedFeeApr: WrappedI80F48Args;
  protocolIrFee: WrappedI80F48Args;
  protocolOriginationFee: WrappedI80F48Args;
  padding: Array<number | bigint>;
};

export function getInterestRateConfigSerializer(): Serializer<
  InterestRateConfigArgs,
  InterestRateConfig
> {
  return struct<InterestRateConfig>(
    [
      ['optimalUtilizationRate', getWrappedI80F48Serializer()],
      ['plateauInterestRate', getWrappedI80F48Serializer()],
      ['maxInterestRate', getWrappedI80F48Serializer()],
      ['insuranceFeeFixedApr', getWrappedI80F48Serializer()],
      ['insuranceIrFee', getWrappedI80F48Serializer()],
      ['protocolFixedFeeApr', getWrappedI80F48Serializer()],
      ['protocolIrFee', getWrappedI80F48Serializer()],
      ['protocolOriginationFee', getWrappedI80F48Serializer()],
      ['padding', array(u32(), { size: 28 })],
    ],
    { description: 'InterestRateConfig' }
  ) as Serializer<InterestRateConfigArgs, InterestRateConfig>;
}
