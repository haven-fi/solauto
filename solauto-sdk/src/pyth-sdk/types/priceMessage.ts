/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { PublicKey } from '@metaplex-foundation/umi';
import {
  Serializer,
  i32,
  i64,
  publicKey as publicKeySerializer,
  struct,
  u64,
} from '@metaplex-foundation/umi/serializers';

export type PriceMessage = {
  feedId: PublicKey;
  price: bigint;
  conf: bigint;
  exponent: number;
  publishTime: bigint;
  prevPublishTime: bigint;
  emaPrice: bigint;
  emaConf: bigint;
};

export type PriceMessageArgs = {
  feedId: PublicKey;
  price: number | bigint;
  conf: number | bigint;
  exponent: number;
  publishTime: number | bigint;
  prevPublishTime: number | bigint;
  emaPrice: number | bigint;
  emaConf: number | bigint;
};

export function getPriceMessageSerializer(): Serializer<
  PriceMessageArgs,
  PriceMessage
> {
  return struct<PriceMessage>(
    [
      ['feedId', publicKeySerializer()],
      ['price', i64()],
      ['conf', u64()],
      ['exponent', i32()],
      ['publishTime', i64()],
      ['prevPublishTime', i64()],
      ['emaPrice', i64()],
      ['emaConf', u64()],
    ],
    { description: 'PriceMessage' }
  ) as Serializer<PriceMessageArgs, PriceMessage>;
}
